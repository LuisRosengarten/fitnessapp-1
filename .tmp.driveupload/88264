{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from 'react';\nimport { auth } from \"../firebase/firebase-config\";\nimport { signInWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isSignedIn = _useState6[0],\n    setSignedIn = _useState6[1];\n  var navigation = useNavigation();\n\n  var handleSignIn = function handleSignIn() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      setSignedIn(true);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n  useEffect(function () {\n    var unsubscribe = onAuthStateChanged(auth, function (user) {\n      if (user) {\n        navigation.replace('Tab');\n      }\n    });\n    return unsubscribe;\n  }, []);\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email.toString(),\n        onChangeText: function onChangeText(text) {\n          return setEmail(text.toString());\n        },\n        style: styles.input,\n        textContentType: \"emailAddress\"\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password.toString(),\n        onChangeText: function onChangeText(text) {\n          return setPassword(text.toString());\n        },\n        style: styles.input,\n        secureTextEntry: true,\n        textContentType: \"password\"\n      })]\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(TouchableOpacity, {\n        onPress: handleSignIn,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })\n    })]\n  });\n};\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","auth","signInWithEmailAndPassword","onAuthStateChanged","useNavigation","LoginScreen","email","setEmail","password","setPassword","isSignedIn","setSignedIn","navigation","handleSignIn","then","userCredential","catch","err","console","log","unsubscribe","user","replace","styles","container","inputContainer","toString","text","input","buttonContainer","button","buttonText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","buttonOutline","borderColor","borderWidth","color","fontWeight","fontSize","buttonOutlineText"],"sources":["/Users/luisrosengarten/Documents/CODEN/apps/fitnessapp/screens/LoginScreen.js"],"sourcesContent":["import { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport React, { useEffect, useState } from 'react'\nimport { auth } from '../firebase/firebase-config'\nimport { signInWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth'\nimport { useNavigation } from '@react-navigation/native'\n\nconst LoginScreen = () => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [isSignedIn, setSignedIn] = useState(false)\n    const navigation = useNavigation()\n\n    /*const handleSignUp = () => {\n        createUserWithEmailAndPassword(auth, email, password)\n        .then((re) => {\n            setSignedIn(true)\n        })\n    }*/\n\n    const handleSignIn = () => {\n        signInWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n            setSignedIn(true)\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                navigation.replace('Tab')\n            }\n        })\n\n        return unsubscribe\n    }, [])\n\n  return (\n    <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\n      <View style={styles.inputContainer}>\n        <TextInput \n            placeholder='Email'\n            value={email.toString()}\n            onChangeText={text => setEmail(text.toString())}\n            style={styles.input}\n            textContentType='emailAddress'\n        />\n        <TextInput \n            placeholder='Password'\n            value={password.toString()}\n            onChangeText={text => setPassword(text.toString())}\n            style={styles.input}\n            secureTextEntry\n            textContentType='password'\n        />\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n            onPress={handleSignIn}\n            style={styles.button}\n        >\n            <Text style={styles.buttonText}>Login</Text>\n        </TouchableOpacity>\n      </View>\n\n    </KeyboardAvoidingView>\n  )\n}\n\nexport default LoginScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    inputContainer: {\n        width: '80%',\n    },\n    input: {\n        backgroundColor: 'white',\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        borderRadius: 10,\n        marginTop: 5\n    },\n    buttonContainer: {\n        width: '60%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 40,\n    },\n    button: {\n        backgroundColor: '#0782F9',\n        width: '100%',\n        padding: 15,\n        borderRadius: 10,\n        alignItems: 'center'\n    },\n    buttonOutline: {\n        backgroundColor: 'white',\n        marginTop: 5,\n        borderColor: '#0782F9',\n        borderWidth: 2\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: '700',\n        fontSize: 16\n    },\n    buttonOutlineText: {\n        color: '#0782F9',\n        fontWeight: '700',\n        fontSize: 16\n    },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}